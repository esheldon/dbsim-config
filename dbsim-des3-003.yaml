#
# tuned to be similar to nbrsim configs
# I'm seeing lower number density than what
# I would expect though, about 6.4/sq arcmin effective
#
# also turned off background subtraction, since didn't
# do that for nbrsim
#

# scale of entire group in arcseconds.  Currently this
# is a gaussian sigma

positions:
    type: 'uniform'

    # limit with in arcminute box
    # objects with get shifts +/- width/2
    width: 60.0 # arcminute

# 2.2x2.2 arcminute
#dims: [500,500]

# this is the total number to simulate N/square arcminutes
# this is density of 30/square arcminutes
#nobj:
#    type: 'poisson'
#    mean: 145

# 0.6x0.6 arcmin, slightly larger than max offset
#dims: [135, 135]

# 1.2x1.2 arcminutes
# the boundary should contain the max box size of 64
dims: [275, 275]

nobj:
    type: 'poisson'
    mean: 124.0 # per square arcminute

# simple pixel scale for wcs
pixel_scale: 0.263

# noise for the image, same for all bands
noise_sigma: 175.0

measure_background: false

# source extractor config
# this is what I used for nbrsim
sx:
    # in sky sigma
    #DETECT_THRESH
    detect_thresh: 1.6

    # Minimum contrast parameter for deblending
    #DEBLEND_MINCONT
    deblend_cont: 0.005

    # minimum number of pixels above threshold
    #DETECT_MINAREA: 6
    #minarea: 6
    # it was overridden on the command line
    minarea: 3

meds:
    rad_min: 4
    min_box_size: 32
    max_box_size: 64
    box_padding: 2

# any galsim draw method
draw_method: 'phot'

# nois in psf image, should be very small
psf_noise_sigma: 0.0001

# number of bands. you should probably keep this
# at 3 for visualization purposes
nband: 3

pdfs:
    g:
        sigma: 0.2

    # hlr of the disk
    hlr_flux:
        type: cosmos

        r50_range: [0.15, 1.0]
        flux_range: [2.5, 100.0]

        # factor to multiply the fluxes
        # for nbr sim and it used factor
        # of 250 for one band and noise sigma of 100 (10000 poisson)
        # so if we keep noise sigma at 100 but have three bands,
        # we need to have flux mult of sqrt(3) lower to preserve
        # the S/N
        flux_mult: 250.0

    disk:
        color: [1.25, 1.0, 0.75]

    bulge:
        color: [0.5, 1.0, 1.5]

        # g_bulge=g_fac*g_disk
        g_fac:
            type: uniform
            range: [0.5, 1.0]

        fracdev:
            type: uniform
            range: [0.0, 1.0]

        # bulge_hlr=hlr_fac*disk_hlr
        hlr_fac: 
            type: uniform
            range: [0.9, 1.1]

        # shift in units of the disk hlr
        bulge_shift: 0.05

    knots:
        color: [1.5, 1.0, 0.5]

        num:
            type: uniform
            range: [1, 50]


        # flux per knot as a fraction of the disk flux
        # so the max of 50 knots would have a total of 1/5 the disk flux
        flux_frac_per_knot: 0.004

shear: [0.02, 0.00]
