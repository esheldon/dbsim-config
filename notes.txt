TODO
cutting R dist on pair mofam and am
also coadd des3 run -7,9 or so

what I know currently
----------------------

- works ok when all objects are above detection threshold

- bias is minus few percent in all cases where there were objects below
  threshold
    - R are too high

- caveat:  I also saw it for low noise.

- see bias with our without uberseg (consistent with above, that it is about
  undetected objects not deblending per se.)
  - I thought it was maybe a selection effect but I doubt this, because it
    occurs even when far above thresholds

- didn't see this in the Y1 simulations "nbrsim"

- see it even if matching to truth (which I did in nbrsim)

ideas
------

- run on nbrsim?
- do something linear in the data so we could make a correction based on
  random field?
    - For linear estimator, would expect R = Robj + Rnbr, could estimate Rnbr
      from a random area
    - all I could imagine is a weighted moment, but I know that doesn't work
      too well
        - super low R values, and I saw some bias as I recall

tests
-------


- seeing big bias for 4 objects. maybe not too surprising, the density
  is quite high, 51/sq arcmin.  But note the density is really higher
  because they are distributed as a gaussian around the center.
  
  In any case, I want to explore it a little

    - uberseg
        - can only do it for both now....
        - mcal-002
        - R considerably less wide *in the tails*
        - running some more to better test shear
        - huh... got higher bias this time

    - simpler model for MOF

    - priors
        - tighter prior on cen
        - looser prior on cen
        - better prior on size and flux
        - tighter prior on fracdev

    - metacal the whole scene some how
        - currently not set up to do this
        - already know the cheating metacal works

- doing more realistic scenes for DES
    - larger images
    - objects placed randomly, uniformly
        - maybe putting down some clusters too
    - try to get the density of detections about right, or the effective
      number density
    - des5-ln001-mcal-003
    - seeing additive -1.5e-4 (probably the m seen is also that)
        - what the heck would cause that?  Centering problems?
        - how could it have a preferred direction?  maybe
        the medsifier is doing it some how, off-center stamps?

    - also going to do some selections on size and s/n.  If depends on size
      that might tell something

      - no cuts
        R: [0.83755737 0.83730776]
		total wsum: 11604056.0
		shear_meas:     [ 0.01984893 -0.00015563]
		shear_meas_err: [5.01195620e-05 5.01877496e-05]
		errors are 3 sigma
		m: -7.55348758e-03 +/- 7.51793430e-03  c: -1.55628017e-04 +/- 1.50563249e-04 

		3 sigma bias and additive

      - just size cut at T/Tpsf > 0.5 (also s/n > 10 but that cuts nothing)
		R: [0.85336745 0.85323621]
		Rsel: [0.08519229 0.08473903]
		shear_meas:     [ 0.01950958 -0.00016299]
		shear_meas_err: [0.00010322 0.00010354]
		without correction
		errors are 1 sigma
		m: 7.28615386e-02 +/- 5.67599653e-03  c: -1.79180065e-04 +/- 1.13819536e-04

		with correction
		errors are 1 sigma
		m: -2.45212149e-02 +/- 5.16079102e-03  c: -1.62992490e-04 +/- 1.03536795e-04

				
      - T/Tpsf > 0.5 S/N > 500
		keeps 25%
		R: [0.8540184  0.85403539]
		Rsel: [0.08346282 0.08287814]
		total wsum: 2856251.0
		shear_meas:     [ 0.01951948 -0.00017446]
		shear_meas_err: [0.00010426 0.00010457]
		without correction
		errors are 3 sigma
		m: 7.13554674e-02 +/- 1.71681712e-02  c: -1.91393039e-04 +/- 3.44168469e-04

		with correction
		errors are 3 sigma
		m: -2.40260164e-02 +/- 1.56397097e-02  c: -1.74462663e-04 +/- 3.13723779e-04

      - T/Tpsf > 0.5 S/N > 1000
		keeps 20%

        R: [0.85635538 0.85650581]
        Rsel: [0.07334992 0.07314312]
        total wsum: 2326704.0
        shear_meas:     [ 0.01939915 -0.00028374]
        shear_meas_err: [0.00011773 0.00011807]

        without correction
        errors are 3 sigma
        m: 5.30378439e-02 +/- 1.91724257e-02  c: -3.07966938e-04 +/- 3.84467451e-04

        with correction
        errors are 3 sigma
        m: -3.00425019e-02 +/- 1.76598004e-02  c: -2.83736648e-04 +/- 3.54218238e-04

noisy one with about 8/sq arcmin effective
large bias

- maybe need to subtract background
    - doesn't look better
- maybe threshold also too low.
    - I used some of the settings from n brsim, running now
    - dbsim-des3-001
    - no difference
      
- maybe box sizes are too small at 16; maybe put limit at 32
    - found a bug with box size actually, not clipping to
    min box size!
    - still some bias

- ideas
    - make more like nbrsim: in particular the noise but
    keep the 250 flux factor
        - dbsim-des3-002
        - run-des3-002-mcal-003
        - still biased

    - try running with just uberseg no mof subtraction
    - bug when I made it work for non-square stamps?

    - book keeping error sending to metacal?
    - use of uberseg (don't think uberseg was used
    after first fit in original MOF)
        - because I'm less liberal with linking I need
        uberseg since there are objects in the stamps
        (especially with new larger min stamp size 32)

    - PSF OK? should be since one object was unbiased


- dbsim-bd08-ln001
    - 8 high s/n objects in 1 square arcminute area
    - m: -4.39092245e-04 +/- 2.80686868e-03 1 sigm
- dbsim-bd08-001
    - 8 mcal_s2n ~ 15 objects in 1 square arcminute area
    - looks ok

- dbsim-des3-003
    - using same settings for CosmosSampler as for nbrsim
    - kept same multiplier for flux as nbrsim
    - more noise to get density down to Y3 levels about 7.5
    effective after s2n10Trat15 cuts

    - still biased low by 2-3 percent

    - run-dbsim-des3-003-mcal-nomof-001-001
        - using just uberseg
        - still looks biased, in fact right about the
        same amount

- maybe should use a different linking for subtraction
    of neighbors: then stamps as linking do make sense for sure
    - could just implement old liberal linking and see how
    well it works, or use smaller images and link everything
    ( definitely use fixed number then )

    - or link everything explicitly
        - seeing 23/sq arcminute detected, 8 effective
          using 1/4 sq arcmin would give 6 detected.
          That's 57 on a side. Would still want padding
          of 0.2 arcmin so 102

          smaller so groups aren't too big
          link all "la"
          - run-des3-small01-mcal-la01-01
              - same
              

    - out of desperation trying lower shape noise since
    that is a diff. with the bd08-001 sim that looked ok
        - even worse?

    - maybe using photon shooting is the problem.  The noise
    in the background is incorrect then.  maybe do a run
    with exp only so it is fast?  looked at nbrsim, and
    it used photon shooting for this range of fluxes and
    noise

        - no better
        - ugh, forgot I already tested s/n=15 in dbsim-bd08-001
        maybe something odd with selections

- fixing noise and density, still exp only
    run-des3-006-mcal-004-001
  same. thinking it is the extra galaxies "faint" which
  actually were not so small or faint

- turned off uberseg, just as bad if not worse

- dbsim-des3-007
    - adopted the y3 sx params
    - run-des3-007-mcal-004

- dbsim-des3-008
    - run 01 doing  bg sub
    - run 02 also doing shears on individual objects
        rather than whole group
        same

- dbsim-des3ce-01
    - use a smooth function for r50-flux to better avoid
    boundaries in the simulatd sample
    - still have not ensured the distribution of sizes makes
    sense


- dbsim-des3ce-01
    - set a noise  image from random empty patch
    - mcal-05 use the noise image

# matching truth

run-des3ce-10-mcal-07-01

    # everything matches...  so try to be tighter on matching
    # 0.23 get 99%

# maybe remove those with neighbors somehow?


# adopting y5 sx settings
    dbsim-y5sx-01
    run-y5sx-01-mcal-07-01.yaml

# maybe box sizes are screwing things up?  Letting
# it be continuous now
# maybe try fixing it or using the usual 32,48,64..?
# more boundary?

# ok running with more standard box sizes
# but might need to still use old linking?




# re-trying meta-detect which did seem to help
    - des5-y5sx-01
       lsst package for sim
       high shear 0.08, expect 4-5 e-3 bias positive

    - runs-des5-y5sx-01-metameta-03
    - uberseg max fitting only, no MOF

    s/n > 10 T/Tpsf > 0.5
        num: 11711556
        R: [0.81823473 0.8361825 ]
        errors are 3 sigma
        m: 4.31132793e-03 +/- 3.25067104e-03  c: -9.71650793e-05 +/-
        2.52974114e-04

    s/n > 15 T/Tpsf > 0.5

        num: 8308399
        R: [0.99625244 1.01663743]
        errors are 3 sigma
        m: 6.30418886e-03 +/- 3.49874748e-03  c: -1.00912067e-04 +/- 2.73746215e-04

    These look consistent with the expected bias at shear 0.08, about
    4-6e-3 (depends on the details)

   - run-des5-y5sx-01-metameta-04-01
       this one doing MOF with exp

       some long ones still running

        s/n > 10 T/Tpsf > 0.5

        num: 10038318
        R: [0.83063286 0.84920812]
        errors are 3 sigma
        m: 7.24775806e-03 +/- 3.52080180e-03  c: 1.17676384e-04 +/- 2.74083331e-04


        s/n > 15 T/Tpsf > 0.5

        num: 7050615
        R: [1.01121167 1.03391868]
        errors are 3 sigma
        m: 8.87607882e-03 +/- 3.80160538e-03  c: 7.87301581e-05 +/- 2.97106900e-04

   - run-des5-y5sx-01-metameta-04-02
        was worried the catalog might have a mean e1 or e2 so
        did another onw with randomized pos angles for both bulge and disk (meant
        to make them equal to one another)

        - looks about the same


    - want to do lower shear tests
        - do trick with one +0.01 and the other -0.01 but
          same seeds to cancel some shape noise and just look
          at diffshear = shear1-shear2 to construct
              m = diffshear/0.02 - 1
              merr = diffshear_err/0.02
          get the errors from jackknifing

        runs-des5-y5sx-02p-metameta-03
        runs-des5-y5sx-02m-metameta-03

    - do some that isn't meta-detect to see what the
      bias is for reference
      run-des5-y5sx-02p-mcal-11-01
      run-des5-y5sx-02m-mcal-11-01

      s2n > 10
      errors are 3 sigma
      m: -3.72679224e-02 +/- 1.30455721e-02

- metacal assumptions that might be broken
    1 linearity
    2 noise known
    3 psf known (no)

    2 use unique pixels for measurement (cweight)
        # make sure we have some area in seg maps, so set
        # minarea 9
        dbsim-des5-ma9-01p.yaml
        dbsim-des5-ma9-01m.yaml

        # use cweight
        mcal-seg01.yaml

        # runs
        run-des5-ma9-01p-mcal-seg01-01
        run-des5-ma9-01m-mcal-seg01-01


tests with pairs of objects, one at center, other on ring
---------------------------------------------------------

Low noise pair tests
=====================

objects with mcal s/n ~ 125

    - uberseg only, no MOF
        - run-epair-ln01-mcal-12-01
            R: [0.71771628 0.71957432]
            total wsum: 10001242.0
            errors are 3 sigma
            m: -3.11263635e-02 +/- 3.25594725e-03
            c: 3.39740435e-04 +/- 6.50184269e-05

        - zero shear version
            shear_meas:     [-0.00265389  0.00037351]
            shear_meas_err: [2.17084029e-05 2.16973029e-05]

          what?

    - no uberseg or MOF. shape noise high due to unmasked/unsubtracted
          neighbor
        - runs-epair-ln01-mcal-wt12
            R: [0.99810619 0.9810617 ]
            total wsum: 49264648.0
            errors are 3 sigma
            m: -1.72621523e-03 +/- 8.03104737e-03
            c: 9.96706031e-06 +/- 1.62527159e-04
        - zero shear version
            shear_meas:     [ 2.27015747e-05 -7.94343485e-05]
            shear_meas_err: [0.00011881 0.00012035]
        - high noise version

            R: [0.71768377 0.71142751]
            total wsum: 89039676.0
            errors are 3 sigma
            m: -1.66608831e-03 +/- 7.40796710e-03
            c: 4.80127515e-05 +/- 1.49113393e-04


    - MOF subtracted, no uberseg
        - runs-epair-ln01-mcal-fof12

            R: [0.88885333 0.88948947]
            total wsum: 49982322.0
            errors are 3 sigma
            m: -3.77919338e-04 +/- 6.80098061e-04
            c: 3.87208699e-06 +/- 1.35911188e-05

            some negative bias

    - runs-epair-ln01-metamof12
        metacal mof process, shearing full image which we can't
        do in real data unless we have a coadd for the group.  For better test
        we would metacal the stamps only and redo MOF.

        num: 59730385
        R:
         [[ 9.60111908e-01  4.12373725e-06]
          [-1.48813543e-05  9.61022162e-01]]
          shear: 0.019998 +/- 0.000004 0.000002 +/- 0.000004
          errors are 3 sigma
          m: -7.86318975e-05 +/- 6.36607786e-04  c: 1.71813459e-06 +/- 1.27221864e-05

          maybe a bit better than not metamofing

    - run-epair-01-mcal-metamof12-01
        num: 98331152
        R:
         [[ 4.75332155e-01  1.26469448e-04]
          [-6.88606695e-05  4.76136570e-01]]
          errors are 3 sigma
          m: -3.64319267e-02 +/- 4.08990456e-03  c: 1.22000445e-06 +/- 8.17710330e-05

    - runs-epair-01-metamofavg01
        - do max like solution for mean in fof group
        - might still be buggy
        num: 50023671
        R:
         [[ 5.32441310e-01 -4.61877623e-05]
          [-1.40968514e-04  5.33710083e-01]]
          errors are 3 sigma
          m: -4.28295404e-02 +/- 4.22667339e-03  c: 2.50512163e-05 +/- 8.45391775e-05

    - run-epair-ln01-symwt12-01
        - symmetrize uberseg
        R: [0.7091136  0.71089007]
        Rpsf: [0. 0.]
        total wsum: 10001268.0
        shear_meas:     [0.01958322 0.00050547]
        shear_meas_err: [2.36277287e-05 2.36314654e-05]

    - run-epair-ln01-symwt12-02
        - doing all rotations
        R: [0.64491725 0.64575926]
        Rpsf: [0. 0.]
        total wsum: 9428665.0
        errors are 3 sigma
        m: -9.31109239e-03 +/- 5.06676561e-03  c: 2.91049002e-04 +/- 1.02238793e-04

    - adaptive moments
        - run-epair-01-mcal-am01-01
            R: [1.00220331 1.01214291]
            Rpsf: [0. 0.]
            total wsum: 75051823.0
            errors are 3 sigma
            m: 1.01519977e-02 +/- 8.75220292e-03  c: -1.60241859e-05 +/- 1.73237590e-04

        - run-epair-01-mcal-mofam01-01
            R: [0.90845108 0.90905859]
            Rpsf: [0. 0.]
            total wsum: 78679317.0
            errors are 3 sigma
            m: -5.43929494e-02 +/- 4.55411926e-03  c: -1.07212217e-05 +/- 9.10704552e-05


trying this config on des3 like sim 

    - dbsim-des3-009
        - exp galaxies so deblending should be good
          using exp in mcal-fof12.  gauss psf.
    - runs-des3-009-mcal-fof12
        s2n > 10 some bias
            R: [0.49658447 0.50040219]
            Rsel: [0.01764054 0.01871706]
            total wsum: 35082859.0
            without selection correction
            errors are 3 sigma
            m: 2.49060438e-02 +/- 8.86872050e-03  c: 4.56946508e-05 +/- 1.74645972e-04

            with selection correction
            errors are 3 sigma
            m: -1.02534609e-02 +/- 8.56447815e-03  c: 4.40471116e-05 +/- 1.68349040e-04

        s2n > 15 some bias
            R: [0.59699891 0.60033741]
            Rsel: [0.01179296 0.01375821]
            total wsum: 15552249.0
            without selection correction
            errors are 3 sigma
            m: 4.54218138e-03 +/- 1.10460536e-02  c: 3.49131804e-06 +/- 2.17712439e-04

            with selection correction
            errors are 3 sigma
            m: -1.49168964e-02 +/- 1.08320795e-02  c: 3.41309849e-06 +/- 2.12834805e-04

    - runs-des3-009-mcal-wt12
        - trying with no mof and no masking!
        - some bias at +2% level



    - descwl sim
        - des3-ma9-01
    - bdf and coellip2 psf for MOF
        - mcal-f0f13
    - run-des3-ma9-01-mcal-fof13-01

        s2n > 10
            R: [0.61120297 0.61536046]
            Rsel: [0.07175001 0.07453318]
            total wsum: 18318423.0
            without selection correction
            errors are 3 sigma
            m: 9.56526652e-02 +/- 1.17497207e-02  c: 4.20358633e-04 +/- 2.30585671e-04

            with selection correction
            errors are 3 sigma
            m: -1.94549574e-02 +/- 1.05153127e-02  c: 3.74944873e-04 +/- 2.05674176e-04

            note
                - the additive error here
                - the very large selection correction

        s2n > 15
            R: [0.73371656 0.73269095]
            Rsel: [0.08366659 0.08777162]
            total wsum: 12944036.0
            without selection correction
            errors are 3 sigma
            m: 8.25022223e-02 +/- 1.19810076e-02  c: 4.59923066e-04 +/- 2.37796450e-04

            with selection correction
            errors are 3 sigma
            m: -2.83017166e-02 +/- 1.07546426e-02  c: 4.10721316e-04 +/- 2.12357410e-04

    - run-des3-010c-mcal-am01-01
        coadded and did am no mof

            s2n > 10 Trat > 1.2

            R: [0.74530066 0.74721347]
            Rsel: [0.01311108 0.01291965]
            total wsum: 133577532.0
            without selection correction
            errors are 3 sigma
            m: -1.46600069e-02 +/- 5.21351006e-03  c: -3.53262203e-05 +/- 1.04181436e-04

            with selection correction
            errors are 3 sigma
            m: -3.16941206e-02 +/- 5.12338124e-03  c: -3.47257958e-05 +/- 1.02410709e-04

            also tried limiting R range but it swung way the other direction
